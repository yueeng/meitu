apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.objectbox' // after applying Android plugin
apply plugin: 'com.getkeepsafe.dexcount'

def keystoreFile = rootProject.file("keystore.properties")
def keystore = new Properties()
keystore.load(new FileInputStream(keystoreFile))

android {
    compileSdkVersion android_compile_sdk
    buildToolsVersion android_build_tools
    defaultConfig {
        minSdkVersion android_min_sdk
        targetSdkVersion android_target_sdk
        applicationId 'io.github.yueeng'
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "boolean", "fav_model", "true"
        buildConfigField "boolean", "fav_organ", "true"
    }
    signingConfigs {
        release {
            storeFile file(keystore['RELEASE_STORE_FILE'])
            keyAlias keystore['RELEASE_KEY_ALIAS']
            storePassword keystore['RELEASE_KEY_PASSWORD']
            keyPassword keystore['RELEASE_STORE_PASSWORD']
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'meitu'
    productFlavors {
        aitaotu {
            dimension 'meitu'
            applicationIdSuffix '.aitaotu'
            resValue "string", "app_name", "爱套图"
            buildConfigField "boolean", "fav_model", "false"
            buildConfigField "boolean", "fav_organ", "false"
        }
        meituri {
            dimension 'meitu'
            applicationIdSuffix '.meituri'
            resValue "string", "app_name", "美图日"
        }
        meitulu {
            dimension 'meitu'
            applicationIdSuffix '.meitulu'
            resValue "string", "app_name", "美图录"
        }
    }
    def apks = []
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                def fileName = "app-${variant.productFlavors[0].name}-release.apk"
                outputFileName = fileName
                apks.add(outputFile.parentFile.absolutePath + File.separator + fileName)
            }
        }
    }
    task publish(dependsOn: 'assembleRelease') {
        doLast {
            def folder = rootDir.getAbsolutePath() + File.separator + "apk"
            delete fileTree(dir: folder, include: "**/*.apk")
            apks.forEach { apk ->
                copy {
                    from apk
                    into folder
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha01'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-android-support:$okhttp_version"
    implementation 'org.jetbrains.anko:anko-sdk15:0.10.8'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation "io.objectbox:objectbox-android:$objectboxVersion"
    implementation "io.objectbox:objectbox-kotlin:$objectboxVersion"
    kapt "io.objectbox:objectbox-processor:$objectboxVersion"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.5'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.8.0'
    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.10.0') {
        exclude group: 'com.android.support'
    }
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}